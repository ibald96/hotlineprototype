<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cop</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//let animation
leg_img_off = 0;
legs = 1;
legs_up = 0;

crouch = 0;
sprint = 0;
noise = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = y*-1;

view_xview = x-view_wview/2;
view_yview = y-view_hview/2;

//inputs
if keyboard_check(ord("W")) { vspeed -= 1; }
if keyboard_check(ord("S")) { vspeed += 1; }
if keyboard_check(ord("A")) { hspeed -= 1; }
if keyboard_check(ord("D")) { hspeed += 1; }
if keyboard_check_pressed(ord("C")) { crouch = !crouch; }
sprint = keyboard_check(vk_shift);
if mouse_check_button_pressed(mb_left) {
    binst = instance_create(x,y-32,obj_bullet);
    binst.direction = dir;
    binst.image_angle = dir;
}

friction = .5;
if sprint { crouch = 0; if speed &gt; 3 speed = 3; }
else if crouch { if speed &gt; 1 speed = 1; }
else { if speed &gt; 2 speed = 2; }

noise = max(0,scr_get_range(speed,0,3,0,1));

//run animation
if speed != 0 {
    if legs_up {    
        legs += speed;
        if legs &gt; 29 { 
            audio_sound_gain(snd_footstep,noise+.1,0);
            audio_sound_pitch(snd_footstep,choose(1.2,1.3));
            audio_play_sound(snd_footstep,1,0);
            legs = 29; legs_up = 0; 
        }
    }
    else {
        legs -= speed;
        if legs &lt; -29 { 
            audio_sound_gain(snd_footstep,noise+.1,0);
            audio_sound_pitch(snd_footstep,choose(1,1.1));
            audio_play_sound(snd_footstep,1,0);
            legs = -29; legs_up = 1; 
        }
    }
} else {
    legs = scr_tween(1,legs,.2);
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
dir = point_direction(x,y,mouse_x,mouse_y);

xx = x;
yy = y;
sca = 1;
inc = 5;
if crouch inc = 3;

spr = spr_gangsta;

//noise radius
draw_set_alpha(.15);
draw_set_colour(c_lime);
draw_circle(x,y,noise*120,0);
draw_set_alpha(1);

//shadow
draw_sprite_ext(spr_shadow,0,xx,yy,sca,sca,0,c_white,.5);

//legs
leg_img_off = round(scr_get_range(abs(legs),0,30,0,2))*3;
draw_sprite_ext(spr,6+leg_img_off,xx,yy,sca,sca*sign(legs),dir,c_white,1); yy-=inc;
draw_sprite_ext(spr,5+leg_img_off,xx,yy,sca,sca*sign(legs),dir,c_white,1); yy-=inc;
if crouch draw_sprite_ext(spr,4+leg_img_off,xx+lengthdir_x(6,dir),yy+lengthdir_y(6,dir),sca,sca*sign(legs),dir,c_white,1); 
    else draw_sprite_ext(spr,4+leg_img_off,xx,yy,sca,sca*sign(legs),dir,c_white,1); yy-=inc;

//torso
draw_sprite_ext(spr,3,xx,yy,sca,sca,dir,c_white,1); yy-=inc;
draw_sprite_ext(spr,2,xx,yy,sca,sca,dir,c_white,1); yy-=inc;

//gun
draw_sprite_ext(spr_guns,0,xx+lengthdir_x(12,dir),yy+lengthdir_y(12,dir),sca,sca,dir,c_white,1);

//arms
if crouch draw_sprite_ext(spr,1,xx+lengthdir_x(3,dir),yy+lengthdir_y(3,dir),sca,sca,dir,c_white,1);
    else draw_sprite_ext(spr,1,xx,yy,sca,sca,dir,c_white,1); yy-=inc;

//head
if crouch draw_sprite_ext(spr,0,xx+lengthdir_x(7,dir),yy+lengthdir_y(7,dir),sca,sca,dir,c_white,1); 
    else draw_sprite_ext(spr,0,xx,yy,sca,sca,dir,c_white,1); yy-=inc;




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
